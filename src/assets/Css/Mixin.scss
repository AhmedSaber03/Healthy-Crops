/*****LINKS *******/
@mixin link($color) {
    color: $color;
    display: inline-block;
    transition: 0.5s;
    font-size: 15px;
    text-transform: uppercase;
    text-decoration: underline;
    font-family: font-Medium;
    body.ar & {
      font-family: "Neo-Medium";
    }
  }

  // @mixin globalTextStyles($mainFontSize, $primaryColor) {
  //   font-size: $mainFontSize;
  //   color: $primaryColor;
  // }    
  
  @mixin btn($background, $primaryColor, $borderColor) {
    background-color: $background;
    
    border: 1px solid $borderColor;
    color: $primaryColor;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0 16px;
    min-height: 40px !important;
    font-size: 14px;
    border-radius: $border_radius;
    transition: 0.3s;
    cursor: pointer;
    text-transform: capitalize;
    @include mq("tablet") {
      padding: 0 12px;
    }
    &.small-btn {
      min-height: 30px !important;
      padding: 0 15px;
    }
    font-family: font-Medium;
    body.ar & {
      font-family: "Neo-Medium";
    }
  }
  
  
  /*****MEDIA QUERY *******/
  $breakpoints: (
  
    "min-phone": 360px,
    "phone": 401px,
    "phone-wide": 481px,
    "phablet": 579px,
    "tablet-small": 641px,
    "tablet": 769px,
    "ipad": 993px,
    "tablet-wide": 1025px,
    "lapTop": 1110px,
    "desktop": 1249px,
    "desktopMore": 1300px,
    "desktop-wide": 1441px,
    "wide-screen": 1921px,
    "test":2800px
    );
  
  @mixin mq($width, $type: max) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type==max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
  // @mixin mq($breakpoint) {
  //   @if map-has-key($breakpoints, $breakpoint) {
  //     @media (min-width: map-get($breakpoints, $breakpoint)) {
  //       @content;
  //     }
  //   } @else {
  //     @warn "Breakpoint '#{$breakpoint}' is not defined in the \$breakpoints map.";
  //   }
  // }
  
  /******prfix****/
  @mixin prefixer($property, $val) {
    #{$property}: $val;
    -webkit-#{$property}: $val;
    -moz-#{$property}: $val;
    -ms-#{$property}: $val;
    -o-#{$property}: $val;
  }
  
  /******input placeholder****/
  @mixin input-placeholder {
    &:-moz-placeholder {
      @content;
    }
    &::-moz-placeholder {
      @content;
    }
    &:-ms-input-placeholder {
      @content;
    }
    &::-webkit-input-placeholder {
      @content;
    }
  }
  
  #__next{
    @include mq("ipad") {
      margin-bottom: 64px !important
  }
  }